rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read and write their own data
    match /agents/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /clients/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow agents to read client data
    match /clients/{clientId} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/agents/$(request.auth.uid));
    }
  
    // Allow authenticated users to read properties
    match /properties/{propertyId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/agents/$(request.auth.uid));
    }

    // Allow authenticated users to create and read requests
    match /requests/{requestId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.clientId ||
        (request.auth.uid == resource.data.agentId && 
         exists(/databases/$(database)/documents/agents/$(request.auth.uid)))
      );
      allow list: if request.auth != null && (
        request.auth.uid == request.query.filters.clientId ||
        (request.auth.uid == request.query.filters.agentId && 
         exists(/databases/$(database)/documents/agents/$(request.auth.uid)))
      );
      // Allow agents to update requests assigned to them
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.agentId && 
        exists(/databases/$(database)/documents/agents/$(request.auth.uid));
    }
  }
} 